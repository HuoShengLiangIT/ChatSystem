<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.chenmixuexi.dao.OfflineMsgMapper" >
  <resultMap id="BaseResultMap" type="cn.chenmixuexi.bean.OfflineMsg" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="to_name" property="toName" jdbcType="VARCHAR" />
    <result column="from_name" property="fromName" jdbcType="VARCHAR" />
    <result column="msg_type" property="msgType" jdbcType="INTEGER" />
    <result column="msg" property="msg" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, to_name, from_name, msg_type, msg, state
  </sql>

  <select id="selectOfToname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from offline_msg
    where to_name = #{name}
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from offline_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from offline_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.chenmixuexi.bean.OfflineMsg" >
    insert into offline_msg (id, user_id, to_name, 
      from_name, msg_type, msg, 
      state)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{toName,jdbcType=VARCHAR}, 
      #{fromName,jdbcType=VARCHAR}, #{msgType,jdbcType=INTEGER}, #{msg,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.chenmixuexi.bean.OfflineMsg" >
    insert into offline_msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="toName != null" >
        to_name,
      </if>
      <if test="fromName != null" >
        from_name,
      </if>
      <if test="msgType != null" >
        msg_type,
      </if>
      <if test="msg != null" >
        msg,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="toName != null" >
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null" >
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chenmixuexi.bean.OfflineMsg" >
    update offline_msg
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="toName != null" >
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null" >
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null" >
        msg_type = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chenmixuexi.bean.OfflineMsg" >
    update offline_msg
    set user_id = #{userId,jdbcType=INTEGER},
      to_name = #{toName,jdbcType=VARCHAR},
      from_name = #{fromName,jdbcType=VARCHAR},
      msg_type = #{msgType,jdbcType=INTEGER},
      msg = #{msg,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>